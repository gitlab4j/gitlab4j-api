<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.gitlab4j</groupId>
	<artifactId>gitlab4j-api</artifactId>
	<packaging>jar</packaging>
	<version>6.0.0-SNAPSHOT</version>
	<name>GitLab4J-API - GitLab API Java Client</name>
	<description>GitLab4J-API (gitlab4j-api) provides a full featured Java client library for working with GitLab repositories and servers via the GitLab REST API.</description>
	<url>https://github.com/gitlab4j/gitlab4j-api</url>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<licenses>
		<license>
			<name>The MIT License (MIT)</name>
			<url>http://opensource.org/licenses/MIT</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>gmessner</id>
			<name>Greg Messner</name>
			<email>greg@messners.com</email>
		</developer>
		<developer>
			<id>gdesaintmartinlacaze</id>
			<name>Gautier de Saint Martin Lacaze</name>
			<email>gautier@jabby-techs.fr</email>
		</developer>
	</developers>

	<properties>
		<java.level>8</java.level>
		<java.source.version>1.8</java.source.version>
		<java.target.version>1.8</java.target.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<jersey.version>2.35</jersey.version>
		<jackson.version>2.12.4</jackson.version>
		<servlet.version>4.0.4</servlet.version>
		<activation.version>1.2.2</activation.version>

		<junit.version>5.8.2</junit.version>
		<testcontainers.version>1.15.3</testcontainers.version>
		<mockito.version>4.4.0</mockito.version>
		<hamcrest.version>1.3</hamcrest.version>
		<systemRules.version>1.19.0</systemRules.version>

		<changelog-lib.version>1.59</changelog-lib.version>
		<bnd.version>5.3.0</bnd.version>

		<gitlab.version>12.9.2-ce.0</gitlab.version>
		<gitlab.autoremove-container>true</gitlab.autoremove-container>
		<gitlab.skip-docker-start>true</gitlab.skip-docker-start>
		<gitlab.port>8090</gitlab.port>

		<maven-enforcer-plugin.maxJdkVersion>1.8</maven-enforcer-plugin.maxJdkVersion>
		<maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
		<maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>

		<sonar.projectKey>gitlab4j_gitlab4j-api</sonar.projectKey>
		<sonar.organization>gitlab4j</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
	</properties>

	<scm>
		<url>git@github.com:gitlab4j/gitlab4j-api.git</url>
		<connection>scm:git:git@github.com:gitlab4j/gitlab4j-api.git</connection>
		<developerConnection>scm:git:git@github.com:gitlab4j/gitlab4j-api.git</developerConnection>
		<tag>head</tag>
	</scm>

	<build>
		<defaultGoal>package</defaultGoal>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<goals>deploy</goals>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-scm-plugin</artifactId>
				<version>1.9.5</version>
				<configuration>
					<tag>${project.artifactId}-${project.version}</tag>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.source.version}</source>
					<target>${java.target.version}</target>
				</configuration>
				<executions>
					<execution>
						<id>default-compile</id>
						<configuration>
							<excludes>
								<exclude>**/module-info.java</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>biz.aQute.bnd</groupId>
				<artifactId>bnd-maven-plugin</artifactId>
				<version>${bnd.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>bnd-process</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<source>8</source>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<archive>
						<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.7</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<!-- implementation is needed only for Maven 2 -->
								<rule implementation="org.jacoco.maven.RuleConfiguration">
									<element>BUNDLE</element>
									<limits>
										<!-- implementation is needed only for Maven 2 -->
										<limit implementation="org.jacoco.report.check.Limit">
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.40</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<systemPropertyVariables>
						<jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
					</systemPropertyVariables>
					<excludedGroups>integration</excludedGroups>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<groups>integration</groups>
					<includes>
						<include>**/*.java</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M2</version>
				<configuration>
					<rules>
						<enforceBytecodeVersion>
							<maxJdkVersion>${maven-enforcer-plugin.maxJdkVersion}</maxJdkVersion>
							<ignoreClasses>
								<ignoreClass>module-info</ignoreClass>
							</ignoreClasses>
						</enforceBytecodeVersion>
					</rules>
				</configuration>
				<executions>
					<execution>
						<id>enforce-bytecode-version</id>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>extra-enforcer-rules</artifactId>
						<version>1.3</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>animal-sniffer-maven-plugin</artifactId>
				<version>1.20</version>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
						<id>check</id>
					</execution>
				</executions>
				<configuration>
					<signature>
						<groupId>org.codehaus.mojo.signature</groupId>
						<artifactId>java1${java.level}</artifactId>
					</signature>
				</configuration>
			</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.30.0</version>
				<configuration>
					<images>
						<image>
							<name>gitlab/gitlab-ce:${gitlab.version}</name>
							<alias>gitlab</alias>
							<run>
								<skip>${gitlab.skip-docker-start}</skip>
								<env>
									<GITLAB_OMNIBUS_CONFIG>gitlab_rails['initial_root_password']="password";
										gitlab_rails['lfs_enabled']=false;</GITLAB_OMNIBUS_CONFIG>
								</env>
								<ports>
									<port>${gitlab.port}:80</port>
								</ports>
								<wait>
									<healthy>true</healthy>
									<time>300000</time>
								</wait>
							</run>
						</image>
					</images>
					<removeVolumes>true</removeVolumes>
				</configuration>
				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!-- The se.bjurr.gitchangelog:git-changelog-maven-plugin needs to be
					in -->
				<!-- this section (pluginManagement) for it to work correctly. -->
				<plugin>
					<groupId>se.bjurr.gitchangelog</groupId>
					<artifactId>git-changelog-maven-plugin</artifactId>
					<version>${changelog-lib.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>git-changelog</goal>
							</goals>
							<configuration>
								<readableTagName>gitlab4j-api-(.*)</readableTagName>
								<templateFile>CHANGELOG.mustache</templateFile>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<bnd><![CDATA[
			            	Export-Package: org.gitlab4j.api.*
				    	]]></bnd>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencies>

		<!-- javax.activation is present for Java 9+ compatibility -->
		<dependency>
			<groupId>jakarta.activation</groupId>
			<artifactId>jakarta.activation-api</artifactId>
			<version>${activation.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.inject</groupId>
			<artifactId>jersey-hk2</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.connectors</groupId>
			<artifactId>jersey-apache-connector</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>uk.org.webcompere</groupId>
			<artifactId>system-stubs-jupiter</artifactId>
			<version>1.2.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- Needed for animal-sniffer -->
			<dependency>
				<groupId>org.codehaus.mojo.signature</groupId>
				<artifactId>java18</artifactId>
				<version>1.0</version>
				<type>signature</type>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<id>ossrh</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>java8</id>
			<activation>
				<jdk>[,9)</jdk>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jar-plugin</artifactId>
							<version>3.2.0</version>
							<configuration>
								<archive>
									<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
								</archive>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<version>${maven-compiler-plugin.version}</version>
							<configuration>
								<source>${java.source.version}</source>
								<target>${java.target.version}</target>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-failsafe-plugin</artifactId>
							<version>3.0.0-M5</version>
							<configuration>
								<groups>integration</groups>
								<includes>
									<include>**/*.java</include>
								</includes>
							</configuration>
							<executions>
								<execution>
									<phase>verify</phase>
									<goals>
										<goal>integration-test</goal>
										<goal>verify</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<id>java9+</id>
			<activation>
				<jdk>[9,)</jdk>
			</activation>
			<properties>
				<jacoco.skip>true</jacoco.skip>
				<skipTests>true</skipTests>
				<animal.sniffer.skip>true</animal.sniffer.skip>
				<maven.test.skip>true</maven.test.skip>
				<maven.javadoc.skip>true</maven.javadoc.skip>
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>biz.aQute.bnd</groupId>
							<artifactId>bnd-maven-plugin</artifactId>
							<version>${bnd.version}</version>
							<configuration>
								<bnd><![CDATA[
										Export-Package: org.gitlab4j.api.*
										-fixupmessages: "Classes found in the wrong directory";restrict:=error;is:=warning
									]]></bnd>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<id>generate-jakarta-sources</id>
			<activation>
				<file>
					<missing>${basedir}/target/jakarta</missing>
				</file>
				<jdk>[9,)</jdk>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<version>${maven-compiler-plugin.version}</version>
							<configuration>
								<release>8</release>
								<source>${java.source.version}</source>
								<target>${java.target.version}</target>
								<!-- recompile everything for target VM except the module-info.java -->
								<excludes>
									<exclude>module-info.java</exclude>
								</excludes>
							</configuration>
							<executions>
								<execution>
									<id>base-compile</id>
									<phase>compile</phase>
									<goals>
										<goal>compile</goal>
									</goals>
									<configuration>
										<release>8</release>
										<source>${java.source.version}</source>
										<target>${java.target.version}</target>
										<!-- recompile everything for target VM except the module-info.java -->
										<excludes>
											<exclude>module-info.java</exclude>
										</excludes>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-antrun-plugin</artifactId>
							<version>${maven-antrun-plugin.version}</version>
							<executions>
								<execution>
									<id>generate-jakarta-sources</id>
									<phase>prepare-package</phase>
									<configuration>
										<target name="jakarta-compile">
											<property name="jakarta.src.dir" value="${basedir}/target/jakarta"/>
											<property name="jakarta.test.dir" value="${basedir}/target/jakarta-test"/>

											<delete dir="${jakarta.src.dir}"/>
											<delete dir="${jakarta.test.dir}"/>
											<mkdir dir="${jakarta.src.dir}"/>
											<mkdir dir="${jakarta.test.dir}"/>

											<echo message="project home:        ${basedir}" />
											<echo message="java home:           ${java.home}" />
											<echo message="JAVA_HOME:           ${JAVA_HOME}"/>
											<echo message="java version:        ${java.version}" />

											<echo message="sources dir:         ${basedir}/src/main/java"/>
											<echo message="jakarta dir:         ${jakarta.src.dir}"/>

											<copy todir="${jakarta.src.dir}">
												<fileset dir="${basedir}/src/main/java" includes="**/*.java">
													<contains text="javax."/>
												</fileset>
											</copy>

											<copy todir="${jakarta.test.dir}">
												<fileset dir="${basedir}/src/test/java" includes="**/*.java">
													<contains text="javax."/>
												</fileset>
											</copy>

											<exec dir="${basedir}" executable="/bin/bash">
												<arg value="-c"/>
												<arg value="JAVA_HOME=${java.home}; ./mvnw compile verify -P jakarta"/>
											</exec>
										</target>
									</configuration>
									<goals>
										<goal>run</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<id>jakarta</id>
			<properties>
				<jakarta.source.version>9</jakarta.source.version>
				<jakarta.target.version>9</jakarta.target.version>
				<jersey.version>3.0.0</jersey.version>
				<servlet.version>6.0.0</servlet.version>
				<activation.version>2.1.1</activation.version>
				<maven.javadoc.skip>true</maven.javadoc.skip>
				<maven.jacoco.skip>true</maven.jacoco.skip>
				<maven-enforcer-plugin.maxJdkVersion>11</maven-enforcer-plugin.maxJdkVersion>
			</properties>
			<dependencies>
				<dependency>
					<groupId>jakarta.annotation</groupId>
					<artifactId>jakarta.annotation-api</artifactId>
					<version>2.0.0</version>
				</dependency>
			</dependencies>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jar-plugin</artifactId>
							<version>3.2.0</version>
							<configuration>
								<archive>
									<manifestEntries>
										<Multi-Release>true</Multi-Release>
									</manifestEntries>
									<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
								</archive>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-antrun-plugin</artifactId>
							<version>${maven-antrun-plugin.version}</version>
							<executions>
								<execution>
									<id>generate-jakarta-sources</id>
									<phase>generate-sources</phase>
									<configuration>
										<target>
											<property name="jakarta.src.dir" value="${basedir}/target/jakarta"/>
											<property name="jakarta.test.dir" value="${basedir}/target/jakarta-test"/>

											<echo message="replace javax.servlet        ====> jakarta.servlet"/>
											<echo message="replace javax.ws.rs          ====> jakarta.ws.rs"/>
											<echo message="replace javax.annotation     ====> jakarta.annotation"/>
											<replace dir="${jakarta.src.dir}" summary="true" includes="**/*.java">
												<replacefilter token="javax.servlet" value="jakarta.servlet"/>
												<replacefilter token="javax.ws.rs" value="jakarta.ws.rs"/>
												<replacefilter token="javax.annotation" value="jakarta.annotation"/>
											</replace>

											<replace dir="${jakarta.test.dir}" summary="true" includes="**/*.java">
												<replacefilter token="javax.servlet" value="jakarta.servlet"/>
												<replacefilter token="javax.ws.rs" value="jakarta.ws.rs"/>
												<replacefilter token="javax.annotation" value="jakarta.annotation"/>
											</replace>
										</target>
									</configuration>
									<goals>
										<goal>run</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<version>${maven-compiler-plugin.version}</version>
							<configuration>
								<release>9</release>
								<source>${jakarta.source.version}</source>
								<target>${jakarta.target.version}</target>
								<compileSourceRoots>
									<compileSourceRoot>${project.basedir}/target/jakarta</compileSourceRoot>
								</compileSourceRoots>
								<outputDirectory>${project.build.outputDirectory}/META-INF/versions/9</outputDirectory>
							</configuration>
							<executions>
								<execution>
									<id>java8-compile</id>
									<phase>compile</phase>
									<goals>
										<goal>compile</goal>
									</goals>
									<configuration>
										<release>8</release>
										<source>${java.source.version}</source>
										<target>${java.target.version}</target>
									</configuration>
								</execution>
								<execution>
									<id>jakarta-compile</id>
									<phase>compile</phase>
									<goals>
										<goal>compile</goal>
									</goals>
									<configuration>
										<release>9</release>
										<source>${jakarta.source.version}</source>
										<target>${jakarta.target.version}</target>
										<outputDirectory>${project.build.outputDirectory}/META-INF/versions/9
										</outputDirectory>
									</configuration>
								</execution>
								<execution>
									<id>jakarta-test-compile</id>
									<phase>test-compile</phase>
									<goals>
										<goal>testCompile</goal>
									</goals>
									<configuration>
										<release>9</release>
										<source>${jakarta.source.version}</source>
										<target>${jakarta.target.version}</target>
										<compileSourceRoots>
											<root>${project.basedir}/target/jakarta-test</root>
										</compileSourceRoots>
										<outputDirectory>${project.basedir}/target/test-classes
										</outputDirectory>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>

</project>

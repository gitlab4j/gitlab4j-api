dependencies {
    api project(':gitlab4j-models')
    api 'jakarta.activation:jakarta.activation-api:2.1.1'
    api 'org.glassfish.jersey.inject:jersey-hk2:3.1.1'
    api 'org.glassfish.jersey.core:jersey-client:3.1.1'
    api 'org.glassfish.jersey.connectors:jersey-apache-connector:3.1.1'
    api 'org.glassfish.jersey.media:jersey-media-multipart:3.1.1'
    api 'org.glassfish.jersey.media:jersey-media-json-jackson:3.1.1'
    api 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.2.0'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'uk.org.webcompere:system-stubs-jupiter:2.0.2'
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.10.4"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.10.4"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'GitLab4J-API - GitLab API Java Client'
                description = 'GitLab4J-API (gitlab4j-api) provides a full featured Java client library for working with GitLab repositories and servers via the GitLab REST API.'
                packaging = 'jar'
                url = 'https://' + "$githubRepositoryOwner" + '.github.io/' + "$githubRepositoryName" + '/'
                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'http://opensource.org/licenses/MIT'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'gmessner'
                        name =  'Greg Messner'
                        email = 'greg@messners.com'
                    }
                    developer {
                        id = 'gdesaintmartinlacaze'
                        name =  'Gautier de Saint Martin Lacaze'
                        email = 'gautier@jabby-techs.fr'
                    }
                    developer {
                        url = 'https://github.com/orgs/' + "$githubRepositoryOwner" + '/people'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/' + "$githubRepositoryOwner" + '/' + "$githubRepositoryName" + '.git'
                    developerConnection = 'scm:git:https://github.com/' + "$githubRepositoryOwner" + '/' + "$githubRepositoryName" + '.git'
                    url = 'https://github.com/' + "$githubRepositoryOwner" + '/' + "$githubRepositoryName" + '/'
                }
            }
            from components.java
        }   
    }
}
